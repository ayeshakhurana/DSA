#include<stdio.h>
#define MAX 100
int visited[MAX],graph[MAX][MAX];
typedef struct stacks{
    int data[MAX];
    int top;
}stack;
void init_stack(stack* s){
    s->top=-1;
}
int isempty(stack* s){
    return s->top==-1;
}
void push(stack* s,int val){
    if(s->top< MAX-1){
        s->data[++(s->top)]=val;
    }
}
int pop(stack* s){
    if(!isempty(s)){
        return s->data[(s->top)--];
    }
    return  -1;
}
void dfs(int start,int V){
    stack s;
    int node;
    init_stack(&s);
    push(&s,start);
    visited[start]=1;
    printf("DFS traveral: \n");
    while(!isempty(&s)){
        node=pop(&s);
        printf("%d",node);
        for(int i=0;i<V;i++){
            if(graph[node][i]==1 && visited[i]==0){
                push(&s,i);
                visited[i]=1;
            }
        }
    }
    printf("\n");
}
int main(){
    int V,E;
    int start;
    printf("enter vertice and edges in the graph: ");
    scanf("%d %d",&V,&E);
    for(int i=0;i<V;i++){
        for(int j=0;j<V;j++){
            graph[i][j]=0;
        }
        visited[i]=0;
    }
    for(int i=0;i<E;i++){
        int src,dest;
        printf("enter source and destination of node: ");
        scanf("%d %d",&src,&dest);
        graph[src][dest]=1;
        graph[dest][src]=1;
        
    }
    printf("enter starting node: ");
    scanf("%d",&start);
    dfs(start,V);
    return 0;
}
